// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("PGADMIN_DB_URL")
}


model Users {
  id            String         @id @default(cuid())
  email         String         @unique
  role          Role           @default(USER)
  name          String?
  avatar        String?
  timezone      String?        @default("UTC")
  emailVerified Boolean        @default(false)
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
  
  // Relations
  //sessions      Session[]
  accounts      Accounts[]
  events        Events[]
  calendars     Calendars[]
  @@map("users")
}



model Accounts {
  id                String  @id @default(cuid())
  userId            String
  user              Users    @relation(fields: [userId], references: [id], onDelete: Cascade)
  googleId          String   // Google's user ID
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  //expires_at        Int?
  lastSyncedAt      DateTime?
  scope             String?  // access granted
  //id_token          String? @db.Text
  //session_state     String?
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  
  @@unique([googleId])
  @@map("accounts")
}

model Events {
  id           String   @id @default(cuid())
  title        String
  description  String?
  startTime    DateTime
  endTime      DateTime
  location     String?
  color        String?  @default("#3b82f6") // Default blue color
  allDay       Boolean  @default(false)
  googleEventId String? @unique
  timezone     String?  @default("UTC")
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  
  // Relations
  userId       String
  user         Users    @relation(fields: [userId], references: [id], onDelete: Cascade)
  calendarId   String?
  calendar     Calendars? @relation(fields: [calendarId], references: [id])
  
  @@index([userId])
  @@index([startTime])
  @@index([calendarId])
  @@map("events")
}

model Calendars {
  id           String   @id @default(cuid())
  name         String
  color        String   @default("#3b82f6")
  isDefault    Boolean  @default(false)
  googleCalendarId String? @unique
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  
  // Relations
  userId       String
  user         Users     @relation(fields: [userId], references: [id], onDelete: Cascade)
  events       Events[]
  
  @@unique([userId, name])
  @@map("calendars")
}

enum Role {
  ADMIN
  USER
}